[{"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\index.tsx":"1","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\TextEditor.tsx":"2","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\index.ts":"3","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\store.ts":"4","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\enhancers\\monitorReducer.js":"5","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\reducers\\index.ts":"6","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\reducers\\cellsReducer.ts":"7","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\action-types\\index.ts":"8","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\middleware\\logger.ts":"9","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\CellList.tsx":"10","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\useTypedSelector.ts":"11","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\CellListItem.tsx":"12","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\cell.ts":"13","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\CodeCell.tsx":"14","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Resizable.tsx":"15","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\JavaScriptCodeEditor.tsx":"16","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Preview.tsx":"17","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\bundler\\index.ts":"18","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\bundler\\plugins\\fetch-plugin.ts":"19","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"20","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\action-creators\\index.ts":"21","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\useActions.ts":"22","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\ActionBar.tsx":"23","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\AddCell.tsx":"24","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\reducers\\bundlesReducer.ts":"25","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\useCumulativeCode.ts":"26","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Header.tsx":"27","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\RubyCodeEditor.tsx":"28","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\saveCode.ts":"29","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\fetchUserCode.ts":"30","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Navigation.tsx":"31","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Signin.tsx":"32","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\signin.ts":"33","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\useForm.ts":"34"},{"size":1387,"mtime":1613601990626,"results":"35","hashOfConfig":"36"},{"size":1447,"mtime":1613251577014,"results":"37","hashOfConfig":"36"},{"size":132,"mtime":1613247239671,"results":"38","hashOfConfig":"36"},{"size":733,"mtime":1613247960477,"results":"39","hashOfConfig":"36"},{"size":547,"mtime":1613150307936,"results":"40","hashOfConfig":"36"},{"size":326,"mtime":1613333104574,"results":"41","hashOfConfig":"36"},{"size":2511,"mtime":1613431972539,"results":"42","hashOfConfig":"36"},{"size":351,"mtime":1613431358006,"results":"43","hashOfConfig":"36"},{"size":387,"mtime":1613160736263,"results":"44","hashOfConfig":"36"},{"size":1037,"mtime":1613432319363,"results":"45","hashOfConfig":"36"},{"size":184,"mtime":1613243975414,"results":"46","hashOfConfig":"36"},{"size":840,"mtime":1613256409029,"results":"47","hashOfConfig":"36"},{"size":146,"mtime":1613086408455,"results":"48","hashOfConfig":"36"},{"size":2683,"mtime":1613429770926,"results":"49","hashOfConfig":"36"},{"size":2032,"mtime":1613081432779,"results":"50","hashOfConfig":"36"},{"size":2442,"mtime":1613353122783,"results":"51","hashOfConfig":"36"},{"size":1738,"mtime":1613081432775,"results":"52","hashOfConfig":"36"},{"size":1185,"mtime":1613348955063,"results":"53","hashOfConfig":"36"},{"size":2648,"mtime":1613081432756,"results":"54","hashOfConfig":"36"},{"size":851,"mtime":1613081432759,"results":"55","hashOfConfig":"36"},{"size":2002,"mtime":1613432313216,"results":"56","hashOfConfig":"36"},{"size":357,"mtime":1613337065472,"results":"57","hashOfConfig":"36"},{"size":1103,"mtime":1613256018567,"results":"58","hashOfConfig":"36"},{"size":1169,"mtime":1613331598316,"results":"59","hashOfConfig":"36"},{"size":981,"mtime":1613334214547,"results":"60","hashOfConfig":"36"},{"size":1439,"mtime":1613350069060,"results":"61","hashOfConfig":"36"},{"size":198,"mtime":1613352342196,"results":"62","hashOfConfig":"36"},{"size":2549,"mtime":1613427779247,"results":"63","hashOfConfig":"36"},{"size":730,"mtime":1613428975421,"results":"64","hashOfConfig":"36"},{"size":1193,"mtime":1613432235036,"results":"65","hashOfConfig":"36"},{"size":1222,"mtime":1613600816865,"results":"66","hashOfConfig":"36"},{"size":1673,"mtime":1613608067271,"results":"67","hashOfConfig":"36"},{"size":107,"mtime":1613607927251,"results":"68","hashOfConfig":"36"},{"size":640,"mtime":1613609423811,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"1y9jjx",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\index.tsx",["144"],"import 'bulmaswatch/superhero/bulmaswatch.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './main.css';\r\nimport ReactDOM from 'react-dom'; \r\nimport { Provider } from 'react-redux';\r\nimport { store } from './state';\r\nimport CellList from './components/CellList';\r\nimport Header from './components/Header';\r\nimport Navigation from './components/Navigation';\r\nimport { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Signin from './components/Signin';\r\n\r\n\r\nconst App = () => {\r\n    const [loggedIn, setLoggedIn] = useState(false)\r\n    let loggedInUser = {};\r\n    useEffect(() => {\r\n        if (localStorage.getItem('loggedIn')) {\r\n            const user: string | null = localStorage.getItem('user')\r\n            loggedInUser = JSON.parse(user || '')\r\n            setLoggedIn(true);\r\n        };\r\n    }, [])\r\n\r\n    return (\r\n        <Provider store={store({})}>\r\n            <Router>\r\n                <Navigation loggedIn={loggedIn} user={loggedInUser} />\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={CellList} />\r\n                    <Route exact path=\"/signin\" component={Signin} />\r\n                </Switch>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));",["145","146"],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\TextEditor.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\index.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\store.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\enhancers\\monitorReducer.js",[],["147","148"],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\reducers\\index.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\reducers\\cellsReducer.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\action-types\\index.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\middleware\\logger.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\CellList.tsx",["149"],"import './CellList.css';\r\nimport { useEffect, Fragment } from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions'\r\nimport CellListItem from './CellListItem';\r\nimport AddCell from './AddCell';\r\nimport fetchUserCode from '../hooks/fetchUserCode'\r\n\r\nconst CellList: React.FC = () => {\r\n    const { loadCode } = useActions()\r\n\r\n    useEffect(() => {\r\n        const { order, data } = fetchUserCode()\r\n        loadCode(order, data)\r\n    }, [])\r\n\r\n    const cells = useTypedSelector(({ cells: { order, data } }) => {\r\n        return order.map((id) => {\r\n            return data[id];\r\n        });\r\n    });\r\n\r\n    const renderedCells = cells.map((cell) => \r\n    <Fragment key={cell.id}>\r\n        <CellListItem cell={cell} /> \r\n        <AddCell previousCellId={cell.id} />\r\n    </Fragment>);\r\n\r\n    return (\r\n        <div className=\"cell-list\">\r\n            <AddCell previousCellId={null} />\r\n            {renderedCells} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CellList;\r\n","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\useTypedSelector.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\CellListItem.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\cell.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\CodeCell.tsx",["150","151","152"],"import './CodeCell.css';\r\nimport { useState, useEffect } from 'react'; \r\nimport JavaScriptCodeEditor from './JavaScriptCodeEditor';\r\nimport Preview from './Preview';\r\nimport Resizable from './Resizable';\r\nimport { Cell } from '../state';\r\nimport { useActions } from '../hooks/useActions';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { useCumulativeCode } from '../hooks/useCumulativeCode';\r\nimport RubyCodeEditor from './RubyCodeEditor';\r\nimport saveCode from '../hooks/saveCode';\r\n\r\ninterface CodeCellProps {\r\n    cell: Cell\r\n}\r\n\r\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\r\n    const [codeType, setCodeType] = useState('javascript');\r\n\r\n    const { updateCell, createBundle } = useActions();\r\n    const bundle = useTypedSelector((state) => state.bundles[cell.id]);\r\n    const cumulativeCode = useCumulativeCode(cell.id);\r\n    const codeState = useTypedSelector((state) => state.cells);\r\n\r\n    useEffect(() => {\r\n        if (!bundle) {\r\n            createBundle(cell.id, cumulativeCode);\r\n            return;\r\n        };\r\n\r\n        const timer = setTimeout(async () => {  \r\n            createBundle(cell.id, cumulativeCode)\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearTimeout(timer);\r\n        };\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cumulativeCode, cell.id, createBundle]);\r\n\r\n    return (\r\n        <Resizable direction=\"vertical\">\r\n            <div style={{ height: 'calc(100% - 10px)', display: 'flex', flexDirection: 'row'}}>\r\n                <Resizable direction=\"horizontal\">\r\n                    {\r\n                        codeType === 'javascript' \r\n                        ? <JavaScriptCodeEditor \r\n                        initialValue={cell.content}\r\n                        onChange={(value) => updateCell(cell.id, value)} />\r\n                        : <RubyCodeEditor \r\n                        initialValue={cell.content}\r\n                        onChange={(value) => updateCell(cell.id, value)} />\r\n                    }\r\n                    \r\n                </Resizable>\r\n             \r\n                <div className=\"progress-wrapper\">\r\n                    {!bundle || bundle.loading \r\n                    ? \r\n                    <div className=\"progress-cover\">\r\n                        <progress className=\"progress is-small is-primary\" max=\"100\">\r\n                        Loading\r\n                        </progress>\r\n                    </div>            \r\n                    : <Preview code={bundle.code} error={bundle.error} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Resizable>   \r\n    );\r\n};\r\n\r\nexport default CodeCell;","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Resizable.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\JavaScriptCodeEditor.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Preview.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\bundler\\index.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\bundler\\plugins\\fetch-plugin.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\bundler\\plugins\\unpkg-path-plugin.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\action-creators\\index.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\useActions.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\ActionBar.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\AddCell.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\state\\reducers\\bundlesReducer.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\useCumulativeCode.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Header.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\RubyCodeEditor.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\saveCode.ts",["153"],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\fetchUserCode.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Navigation.tsx",["154"],"import './Navigation.css';\r\nimport { Link, Redirect } from 'react-router-dom'; \r\nimport { SyntheticEvent } from 'react';\r\n\r\ninterface NavigationProps {\r\n  loggedIn: boolean;\r\n  user: {}\r\n}\r\n\r\nconst Navigation: React.FC<NavigationProps> = ({ loggedIn, user }) => {\r\n  \r\n  const handleClick = (e: SyntheticEvent) => {\r\n    const toggler = document.querySelector('input');\r\n\r\n    if (toggler?.checked === true) {\r\n      toggler.checked = false;\r\n    };\r\n  };\r\n   \r\n  return (\r\n        <div className=\"menu-wrap\">\r\n        <input type=\"checkbox\" className=\"toggler\" />\r\n        <div className=\"hamburger\"><div></div></div>\r\n        <div className=\"menu\">\r\n          <div>\r\n            <div>\r\n              <ul>\r\n               { \r\n                loggedIn \r\n                ? <>\r\n                    <li>Save</li> \r\n                    <li>Load</li> \r\n                    <li>Email</li> \r\n                    <li>Logout</li> \r\n                  </>\r\n                : <>\r\n                    <li onClick={handleClick}><Link to=\"/signin\">Signin</Link></li>\r\n                  </>\r\n               }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\components\\Signin.tsx",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\signin.ts",[],"C:\\Users\\Rafael\\Desktop\\OnlineCodeEditor\\Client\\src\\hooks\\useForm.ts",[],{"ruleId":"155","severity":1,"message":"156","line":21,"column":28,"nodeType":"157","endLine":21,"endColumn":50},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"155","severity":1,"message":"162","line":15,"column":8,"nodeType":"163","endLine":15,"endColumn":10,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":11,"column":8,"nodeType":"167","messageId":"168","endLine":11,"endColumn":16},{"ruleId":"165","severity":1,"message":"169","line":18,"column":22,"nodeType":"167","messageId":"168","endLine":18,"endColumn":33},{"ruleId":"165","severity":1,"message":"170","line":23,"column":11,"nodeType":"167","messageId":"168","endLine":23,"endColumn":20},{"ruleId":"165","severity":1,"message":"171","line":19,"column":11,"nodeType":"167","messageId":"168","endLine":19,"endColumn":23},{"ruleId":"165","severity":1,"message":"172","line":2,"column":16,"nodeType":"167","messageId":"168","endLine":2,"endColumn":24},"react-hooks/exhaustive-deps","Assignments to the 'loggedInUser' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-native-reassign",["173"],"no-negated-in-lhs",["174"],"React Hook useEffect has a missing dependency: 'loadCode'. Either include it or remove the dependency array.","ArrayExpression",["175"],"@typescript-eslint/no-unused-vars","'saveCode' is defined but never used.","Identifier","unusedVar","'setCodeType' is assigned a value but never used.","'codeState' is assigned a value but never used.","'responseData' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},"Update the dependencies array to be: [loadCode]",{"range":"178","text":"179"},[504,506],"[loadCode]"]