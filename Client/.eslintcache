[{"/app/src/index.tsx":"1","/app/src/components/CellList.tsx":"2","/app/src/components/Header.tsx":"3","/app/src/components/Navigation.tsx":"4","/app/src/components/Signin.tsx":"5","/app/src/state/index.ts":"6","/app/src/hooks/fetchUserCode.ts":"7","/app/src/hooks/useActions.ts":"8","/app/src/hooks/useTypedSelector.ts":"9","/app/src/hooks/useForm.ts":"10","/app/src/hooks/signin.ts":"11","/app/src/components/CellListItem.tsx":"12","/app/src/components/AddCell.tsx":"13","/app/src/state/store.ts":"14","/app/src/state/cell.ts":"15","/app/src/components/CodeCell.tsx":"16","/app/src/components/TextEditor.tsx":"17","/app/src/components/ActionBar.tsx":"18","/app/src/state/reducers/index.ts":"19","/app/src/state/action-creators/index.ts":"20","/app/src/state/enhancers/monitorReducer.js":"21","/app/src/state/middleware/logger.ts":"22","/app/src/hooks/useCumulativeCode.ts":"23","/app/src/components/Resizable.tsx":"24","/app/src/components/JavaScriptCodeEditor.tsx":"25","/app/src/components/RubyCodeEditor.tsx":"26","/app/src/components/Preview.tsx":"27","/app/src/state/reducers/cellsReducer.ts":"28","/app/src/state/reducers/bundlesReducer.ts":"29","/app/src/state/action-types/index.ts":"30","/app/src/bundler/index.ts":"31","/app/src/bundler/plugins/fetch-plugin.ts":"32","/app/src/bundler/plugins/unpkg-path-plugin.ts":"33"},{"size":1348,"mtime":1613773722939,"results":"34","hashOfConfig":"35"},{"size":1000,"mtime":1613773722939,"results":"36","hashOfConfig":"35"},{"size":187,"mtime":1613773531486,"results":"37","hashOfConfig":"35"},{"size":1174,"mtime":1613773722939,"results":"38","hashOfConfig":"35"},{"size":1632,"mtime":1613773722939,"results":"39","hashOfConfig":"35"},{"size":129,"mtime":1613773531486,"results":"40","hashOfConfig":"35"},{"size":1141,"mtime":1613773722939,"results":"41","hashOfConfig":"35"},{"size":345,"mtime":1613773531486,"results":"42","hashOfConfig":"35"},{"size":181,"mtime":1613773531486,"results":"43","hashOfConfig":"35"},{"size":611,"mtime":1613773722939,"results":"44","hashOfConfig":"35"},{"size":103,"mtime":1613773722939,"results":"45","hashOfConfig":"35"},{"size":806,"mtime":1613773531482,"results":"46","hashOfConfig":"35"},{"size":1137,"mtime":1613773531482,"results":"47","hashOfConfig":"35"},{"size":716,"mtime":1613773531486,"results":"48","hashOfConfig":"35"},{"size":140,"mtime":1613773531486,"results":"49","hashOfConfig":"35"},{"size":2610,"mtime":1613773722939,"results":"50","hashOfConfig":"35"},{"size":1398,"mtime":1613773531486,"results":"51","hashOfConfig":"35"},{"size":1069,"mtime":1613773531482,"results":"52","hashOfConfig":"35"},{"size":315,"mtime":1613773531486,"results":"53","hashOfConfig":"35"},{"size":1923,"mtime":1613773722939,"results":"54","hashOfConfig":"35"},{"size":525,"mtime":1613773531486,"results":"55","hashOfConfig":"35"},{"size":373,"mtime":1613773531486,"results":"56","hashOfConfig":"35"},{"size":1396,"mtime":1613773531486,"results":"57","hashOfConfig":"35"},{"size":1967,"mtime":1613773531486,"results":"58","hashOfConfig":"35"},{"size":2363,"mtime":1613773531486,"results":"59","hashOfConfig":"35"},{"size":2468,"mtime":1613773722939,"results":"60","hashOfConfig":"35"},{"size":1675,"mtime":1613773531486,"results":"61","hashOfConfig":"35"},{"size":2432,"mtime":1613773722939,"results":"62","hashOfConfig":"35"},{"size":946,"mtime":1613773531486,"results":"63","hashOfConfig":"35"},{"size":341,"mtime":1613773722939,"results":"64","hashOfConfig":"35"},{"size":1143,"mtime":1613773531482,"results":"65","hashOfConfig":"35"},{"size":2559,"mtime":1613773531482,"results":"66","hashOfConfig":"35"},{"size":820,"mtime":1613773531482,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"ad60fr",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/app/src/index.tsx",["140"],"import 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './main.css';\nimport ReactDOM from 'react-dom'; \nimport { Provider } from 'react-redux';\nimport { store } from './state';\nimport CellList from './components/CellList';\nimport Header from './components/Header';\nimport Navigation from './components/Navigation';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Signin from './components/Signin';\n\n\nconst App = () => {\n    const [loggedIn, setLoggedIn] = useState(false)\n    let loggedInUser = {};\n    useEffect(() => {\n        if (localStorage.getItem('loggedIn')) {\n            const user: string | null = localStorage.getItem('user')\n            loggedInUser = JSON.parse(user || '')\n            setLoggedIn(true);\n        };\n    }, [])\n\n    return (\n        <Provider store={store({})}>\n            <Router>\n                <Navigation loggedIn={loggedIn} user={loggedInUser} />\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={CellList} />\n                    <Route exact path=\"/signin\" component={Signin} />\n                </Switch>\n            </Router>\n        </Provider>\n    );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));",["141","142"],"/app/src/components/CellList.tsx",["143"],"import './CellList.css';\nimport { useEffect, Fragment } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useActions } from '../hooks/useActions'\nimport CellListItem from './CellListItem';\nimport AddCell from './AddCell';\nimport fetchUserCode from '../hooks/fetchUserCode'\n\nconst CellList: React.FC = () => {\n    const { loadCode } = useActions()\n\n    useEffect(() => {\n        const { order, data } = fetchUserCode()\n        loadCode(order, data)\n    }, [])\n\n    const cells = useTypedSelector(({ cells: { order, data } }) => {\n        return order.map((id) => {\n            return data[id];\n        });\n    });\n\n    const renderedCells = cells.map((cell) => \n    <Fragment key={cell.id}>\n        <CellListItem cell={cell} /> \n        <AddCell previousCellId={cell.id} />\n    </Fragment>);\n\n    return (\n        <div className=\"cell-list\">\n            <AddCell previousCellId={null} />\n            {renderedCells} \n        </div>\n    )\n}\n\nexport default CellList;\n","/app/src/components/Header.tsx",[],"/app/src/components/Navigation.tsx",["144"],"import './Navigation.css';\nimport { Link, Redirect } from 'react-router-dom'; \nimport { SyntheticEvent } from 'react';\n\ninterface NavigationProps {\n  loggedIn: boolean;\n  user: {}\n}\n\nconst Navigation: React.FC<NavigationProps> = ({ loggedIn, user }) => {\n  \n  const handleClick = (e: SyntheticEvent) => {\n    const toggler = document.querySelector('input');\n\n    if (toggler?.checked === true) {\n      toggler.checked = false;\n    };\n  };\n   \n  return (\n        <div className=\"menu-wrap\">\n        <input type=\"checkbox\" className=\"toggler\" />\n        <div className=\"hamburger\"><div></div></div>\n        <div className=\"menu\">\n          <div>\n            <div>\n              <ul>\n               { \n                loggedIn \n                ? <>\n                    <li>Save</li> \n                    <li>Load</li> \n                    <li>Email</li> \n                    <li>Logout</li> \n                  </>\n                : <>\n                    <li onClick={handleClick}><Link to=\"/signin\">Signin</Link></li>\n                  </>\n               }\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Navigation\n","/app/src/components/Signin.tsx",[],"/app/src/state/index.ts",[],"/app/src/hooks/fetchUserCode.ts",[],"/app/src/hooks/useActions.ts",[],"/app/src/hooks/useTypedSelector.ts",[],"/app/src/hooks/useForm.ts",[],"/app/src/hooks/signin.ts",[],"/app/src/components/CellListItem.tsx",[],"/app/src/components/AddCell.tsx",[],"/app/src/state/store.ts",[],"/app/src/state/cell.ts",[],"/app/src/components/CodeCell.tsx",["145","146","147"],"import './CodeCell.css';\nimport { useState, useEffect } from 'react'; \nimport JavaScriptCodeEditor from './JavaScriptCodeEditor';\nimport Preview from './Preview';\nimport Resizable from './Resizable';\nimport { Cell } from '../state';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useCumulativeCode } from '../hooks/useCumulativeCode';\nimport RubyCodeEditor from './RubyCodeEditor';\nimport saveCode from '../hooks/saveCode';\n\ninterface CodeCellProps {\n    cell: Cell\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n    const [codeType, setCodeType] = useState('javascript');\n\n    const { updateCell, createBundle } = useActions();\n    const bundle = useTypedSelector((state) => state.bundles[cell.id]);\n    const cumulativeCode = useCumulativeCode(cell.id);\n    const codeState = useTypedSelector((state) => state.cells);\n\n    useEffect(() => {\n        if (!bundle) {\n            createBundle(cell.id, cumulativeCode);\n            return;\n        };\n\n        const timer = setTimeout(async () => {  \n            createBundle(cell.id, cumulativeCode)\n        }, 1000);\n\n        return () => {\n            clearTimeout(timer);\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cumulativeCode, cell.id, createBundle]);\n\n    return (\n        <Resizable direction=\"vertical\">\n            <div style={{ height: 'calc(100% - 10px)', display: 'flex', flexDirection: 'row'}}>\n                <Resizable direction=\"horizontal\">\n                    {\n                        codeType === 'javascript' \n                        ? <JavaScriptCodeEditor \n                        initialValue={cell.content}\n                        onChange={(value) => updateCell(cell.id, value)} />\n                        : <RubyCodeEditor \n                        initialValue={cell.content}\n                        onChange={(value) => updateCell(cell.id, value)} />\n                    }\n                    \n                </Resizable>\n             \n                <div className=\"progress-wrapper\">\n                    {!bundle || bundle.loading \n                    ? \n                    <div className=\"progress-cover\">\n                        <progress className=\"progress is-small is-primary\" max=\"100\">\n                        Loading\n                        </progress>\n                    </div>            \n                    : <Preview code={bundle.code} error={bundle.error} />\n                    }\n                </div>\n            </div>\n        </Resizable>   \n    );\n};\n\nexport default CodeCell;","/app/src/components/TextEditor.tsx",[],"/app/src/components/ActionBar.tsx",[],"/app/src/state/reducers/index.ts",[],"/app/src/state/action-creators/index.ts",[],"/app/src/state/enhancers/monitorReducer.js",[],["148","149"],"/app/src/state/middleware/logger.ts",[],"/app/src/hooks/useCumulativeCode.ts",[],"/app/src/components/Resizable.tsx",[],"/app/src/components/JavaScriptCodeEditor.tsx",[],"/app/src/components/RubyCodeEditor.tsx",[],"/app/src/components/Preview.tsx",[],"/app/src/state/reducers/cellsReducer.ts",[],"/app/src/state/reducers/bundlesReducer.ts",[],"/app/src/state/action-types/index.ts",[],"/app/src/bundler/index.ts",[],"/app/src/bundler/plugins/fetch-plugin.ts",[],"/app/src/bundler/plugins/unpkg-path-plugin.ts",[],{"ruleId":"150","severity":1,"message":"151","line":21,"column":28,"nodeType":"152","endLine":21,"endColumn":50},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"150","severity":1,"message":"157","line":15,"column":8,"nodeType":"158","endLine":15,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":2,"column":16,"nodeType":"162","messageId":"163","endLine":2,"endColumn":24},{"ruleId":"160","severity":1,"message":"164","line":11,"column":8,"nodeType":"162","messageId":"163","endLine":11,"endColumn":16},{"ruleId":"160","severity":1,"message":"165","line":18,"column":22,"nodeType":"162","messageId":"163","endLine":18,"endColumn":33},{"ruleId":"160","severity":1,"message":"166","line":23,"column":11,"nodeType":"162","messageId":"163","endLine":23,"endColumn":20},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},"react-hooks/exhaustive-deps","Assignments to the 'loggedInUser' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"React Hook useEffect has a missing dependency: 'loadCode'. Either include it or remove the dependency array.","ArrayExpression",["169"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'saveCode' is defined but never used.","'setCodeType' is assigned a value but never used.","'codeState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},"Update the dependencies array to be: [loadCode]",{"range":"172","text":"173"},[490,492],"[loadCode]"]