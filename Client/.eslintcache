[{"/app/src/index.tsx":"1","/app/src/components/CellList.tsx":"2","/app/src/components/Header.tsx":"3","/app/src/components/Navigation.tsx":"4","/app/src/state/index.ts":"5","/app/src/hooks/fetchUserCode.ts":"6","/app/src/hooks/useActions.ts":"7","/app/src/hooks/useTypedSelector.ts":"8","/app/src/hooks/useForm.ts":"9","/app/src/components/CellListItem.tsx":"10","/app/src/components/AddCell.tsx":"11","/app/src/state/store.ts":"12","/app/src/state/cell.ts":"13","/app/src/components/CodeCell.tsx":"14","/app/src/components/TextEditor.tsx":"15","/app/src/components/ActionBar.tsx":"16","/app/src/state/reducers/index.ts":"17","/app/src/state/action-creators/index.ts":"18","/app/src/state/enhancers/monitorReducer.js":"19","/app/src/state/middleware/logger.ts":"20","/app/src/hooks/useCumulativeCode.ts":"21","/app/src/components/Resizable.tsx":"22","/app/src/components/JavaScriptCodeEditor.tsx":"23","/app/src/components/RubyCodeEditor.tsx":"24","/app/src/components/Preview.tsx":"25","/app/src/state/reducers/cellsReducer.ts":"26","/app/src/state/reducers/bundlesReducer.ts":"27","/app/src/state/action-types/index.ts":"28","/app/src/bundler/index.ts":"29","/app/src/bundler/plugins/fetch-plugin.ts":"30","/app/src/bundler/plugins/unpkg-path-plugin.ts":"31","/app/src/state/reducers/userReducer.ts":"32","/app/src/components/Login.tsx":"33","/app/src/components/Signup.tsx":"34"},{"size":1093,"mtime":1613865610355,"results":"35","hashOfConfig":"36"},{"size":850,"mtime":1613837874840,"results":"37","hashOfConfig":"36"},{"size":187,"mtime":1613773531486,"results":"38","hashOfConfig":"36"},{"size":2124,"mtime":1613866272743,"results":"39","hashOfConfig":"36"},{"size":129,"mtime":1613773531486,"results":"40","hashOfConfig":"36"},{"size":1141,"mtime":1613773722939,"results":"41","hashOfConfig":"42"},{"size":345,"mtime":1613773531486,"results":"43","hashOfConfig":"36"},{"size":181,"mtime":1613773531486,"results":"44","hashOfConfig":"36"},{"size":611,"mtime":1613773722939,"results":"45","hashOfConfig":"36"},{"size":806,"mtime":1613773531482,"results":"46","hashOfConfig":"36"},{"size":1137,"mtime":1613838462620,"results":"47","hashOfConfig":"36"},{"size":716,"mtime":1613773531486,"results":"48","hashOfConfig":"36"},{"size":140,"mtime":1613773531486,"results":"49","hashOfConfig":"36"},{"size":2610,"mtime":1613773722939,"results":"50","hashOfConfig":"36"},{"size":1398,"mtime":1613773531486,"results":"51","hashOfConfig":"36"},{"size":1069,"mtime":1613773531482,"results":"52","hashOfConfig":"36"},{"size":379,"mtime":1613837874840,"results":"53","hashOfConfig":"36"},{"size":3400,"mtime":1613855598222,"results":"54","hashOfConfig":"36"},{"size":525,"mtime":1613773531486,"results":"55","hashOfConfig":"36"},{"size":373,"mtime":1613773531486,"results":"56","hashOfConfig":"36"},{"size":1396,"mtime":1613773531486,"results":"57","hashOfConfig":"36"},{"size":1967,"mtime":1613773531486,"results":"58","hashOfConfig":"36"},{"size":2363,"mtime":1613773531486,"results":"59","hashOfConfig":"36"},{"size":2468,"mtime":1613773722939,"results":"60","hashOfConfig":"36"},{"size":1675,"mtime":1613773531486,"results":"61","hashOfConfig":"36"},{"size":2467,"mtime":1613837874840,"results":"62","hashOfConfig":"36"},{"size":946,"mtime":1613773531486,"results":"63","hashOfConfig":"36"},{"size":524,"mtime":1613849903054,"results":"64","hashOfConfig":"36"},{"size":1143,"mtime":1613773531482,"results":"65","hashOfConfig":"36"},{"size":2559,"mtime":1613773531482,"results":"66","hashOfConfig":"36"},{"size":820,"mtime":1613773531482,"results":"67","hashOfConfig":"36"},{"size":824,"mtime":1613855521834,"results":"68","hashOfConfig":"36"},{"size":2204,"mtime":1613926803056,"results":"69","hashOfConfig":"36"},{"size":2178,"mtime":1613925347936,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},"15vqxmy",{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"ad60fr",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/app/src/index.tsx",["146","147"],"import 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './main.css';\nimport ReactDOM from 'react-dom'; \nimport { Provider } from 'react-redux';\nimport { store } from './state';\nimport CellList from './components/CellList';\nimport Header from './components/Header';\nimport Navigation from './components/Navigation';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\n\nconst App = () => {\n    return (\n        <Provider store={store({})}>\n            <Router>\n                <Navigation />\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={CellList} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                    <Route exact path=\"/login\" component={Login} />\n                </Switch>\n            </Router>\n        </Provider>\n    );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));",["148","149"],"/app/src/components/CellList.tsx",["150","151","152"],"import './CellList.css';\nimport { useEffect, Fragment } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useActions } from '../hooks/useActions'\nimport CellListItem from './CellListItem';\nimport AddCell from './AddCell';\nimport fetchUserCode from '../hooks/fetchUserCode'\n\nconst CellList: React.FC = () => {\n\n    const cells = useTypedSelector(({ cells: { order, data } }) => {\n        return order.map((id) => {\n            return data[id];\n        });\n    });\n\n    const renderedCells = cells.map((cell) => \n    <Fragment key={cell.id}>\n        <CellListItem cell={cell} /> \n        <AddCell previousCellId={cell.id} />\n    </Fragment>);\n\n    return (\n        <div className=\"cell-list\">\n            <AddCell previousCellId={null} />\n            {renderedCells} \n        </div>\n    )\n}\n\nexport default CellList;\n","/app/src/components/Header.tsx",[],"/app/src/components/Navigation.tsx",["153","154"],"// @ts-nocheck\nimport \"./Navigation.css\";\nimport { useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { SyntheticEvent } from \"react\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\n\n// interface NavigationProps {\n//   user: string\n// }\n\nconst Navigation: React.FC<NavigationProps> = () => {\n  const { checkIfLoggedIn } = useActions();\n  const loggedInUser = useTypedSelector((state) => state.user);\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      checkIfLoggedIn(user);\n    }\n  }, [loggedInUser]);\n\n  const handleClick = (e: SyntheticEvent) => {\n    const toggler = document.querySelector(\"input\");\n\n    if (toggler?.checked === true) {\n      toggler.checked = false;\n    }\n  };\n\n  const handleLogout = (e: SyntheticEvent) => {\n    const toggler = document.querySelector(\"input\");\n\n    if (toggler?.checked === true) {\n      toggler.checked = false;\n    }\n\n    localStorage.clear();\n  };\n\n  return (\n    <div className=\"menu-wrap\">\n      <input type=\"checkbox\" className=\"toggler\" />\n      <div className=\"hamburger\">\n        <div></div>\n      </div>\n      <div className=\"menu\">\n        <div>\n          <div>\n            <ul>\n                <li onClick={handleClick}>\n                    <Link to=\"/\">Home</Link>\n                  </li>\n              {loggedInUser && loggedInUser.username !== \"\" ? (\n                <>\n                  <li>Save</li>\n                  <li>Load</li>\n                  <li>Email</li>\n                  <li onClick={handleLogout}>\n                    <Link to=\"/\">Logout</Link>\n                  </li>\n                </>\n              ) : (\n                <>\n                  <li onClick={handleClick}>\n                    <Link to=\"/signup\">Signup</Link>\n                  </li>\n                  <li onClick={handleClick}>\n                    <Link to=\"/login\">Login</Link>\n                  </li>\n                </>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","/app/src/state/index.ts",[],"/app/src/hooks/fetchUserCode.ts",[],["155","156"],"/app/src/hooks/useActions.ts",[],"/app/src/hooks/useTypedSelector.ts",[],"/app/src/hooks/useForm.ts",[],"/app/src/components/CellListItem.tsx",[],"/app/src/components/AddCell.tsx",[],"/app/src/state/store.ts",[],"/app/src/state/cell.ts",[],"/app/src/components/CodeCell.tsx",["157","158","159"],"import './CodeCell.css';\nimport { useState, useEffect } from 'react'; \nimport JavaScriptCodeEditor from './JavaScriptCodeEditor';\nimport Preview from './Preview';\nimport Resizable from './Resizable';\nimport { Cell } from '../state';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useCumulativeCode } from '../hooks/useCumulativeCode';\nimport RubyCodeEditor from './RubyCodeEditor';\nimport saveCode from '../hooks/saveCode';\n\ninterface CodeCellProps {\n    cell: Cell\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n    const [codeType, setCodeType] = useState('javascript');\n\n    const { updateCell, createBundle } = useActions();\n    const bundle = useTypedSelector((state) => state.bundles[cell.id]);\n    const cumulativeCode = useCumulativeCode(cell.id);\n    const codeState = useTypedSelector((state) => state.cells);\n\n    useEffect(() => {\n        if (!bundle) {\n            createBundle(cell.id, cumulativeCode);\n            return;\n        };\n\n        const timer = setTimeout(async () => {  \n            createBundle(cell.id, cumulativeCode)\n        }, 1000);\n\n        return () => {\n            clearTimeout(timer);\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cumulativeCode, cell.id, createBundle]);\n\n    return (\n        <Resizable direction=\"vertical\">\n            <div style={{ height: 'calc(100% - 10px)', display: 'flex', flexDirection: 'row'}}>\n                <Resizable direction=\"horizontal\">\n                    {\n                        codeType === 'javascript' \n                        ? <JavaScriptCodeEditor \n                        initialValue={cell.content}\n                        onChange={(value) => updateCell(cell.id, value)} />\n                        : <RubyCodeEditor \n                        initialValue={cell.content}\n                        onChange={(value) => updateCell(cell.id, value)} />\n                    }\n                    \n                </Resizable>\n             \n                <div className=\"progress-wrapper\">\n                    {!bundle || bundle.loading \n                    ? \n                    <div className=\"progress-cover\">\n                        <progress className=\"progress is-small is-primary\" max=\"100\">\n                        Loading\n                        </progress>\n                    </div>            \n                    : <Preview code={bundle.code} error={bundle.error} />\n                    }\n                </div>\n            </div>\n        </Resizable>   \n    );\n};\n\nexport default CodeCell;","/app/src/components/TextEditor.tsx",[],"/app/src/components/ActionBar.tsx",[],"/app/src/state/reducers/index.ts",[],"/app/src/state/action-creators/index.ts",[],"/app/src/state/enhancers/monitorReducer.js",[],["160","161"],"/app/src/state/middleware/logger.ts",[],"/app/src/hooks/useCumulativeCode.ts",[],"/app/src/components/Resizable.tsx",[],"/app/src/components/JavaScriptCodeEditor.tsx",[],"/app/src/components/RubyCodeEditor.tsx",[],"/app/src/components/Preview.tsx",[],"/app/src/state/reducers/cellsReducer.ts",[],"/app/src/state/reducers/bundlesReducer.ts",[],"/app/src/state/action-types/index.ts",[],"/app/src/bundler/index.ts",[],"/app/src/bundler/plugins/fetch-plugin.ts",[],"/app/src/bundler/plugins/unpkg-path-plugin.ts",[],"/app/src/state/reducers/userReducer.ts",[],"/app/src/components/Login.tsx",["162","163"],"/app/src/components/Signup.tsx",["164","165"],{"ruleId":"166","severity":1,"message":"167","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":19},{"ruleId":"166","severity":1,"message":"170","line":10,"column":21,"nodeType":"168","messageId":"169","endLine":10,"endColumn":29},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"166","severity":1,"message":"167","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":19},{"ruleId":"166","severity":1,"message":"175","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":20},{"ruleId":"166","severity":1,"message":"176","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":21},{"ruleId":"166","severity":1,"message":"177","line":4,"column":16,"nodeType":"168","messageId":"169","endLine":4,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":21,"column":6,"nodeType":"180","endLine":21,"endColumn":20,"suggestions":"181"},{"ruleId":"171","replacedBy":"182"},{"ruleId":"173","replacedBy":"183"},{"ruleId":"166","severity":1,"message":"184","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":16},{"ruleId":"166","severity":1,"message":"185","line":18,"column":22,"nodeType":"168","messageId":"169","endLine":18,"endColumn":33},{"ruleId":"166","severity":1,"message":"186","line":23,"column":11,"nodeType":"168","messageId":"169","endLine":23,"endColumn":20},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"166","severity":1,"message":"177","line":5,"column":10,"nodeType":"168","messageId":"169","endLine":5,"endColumn":18},{"ruleId":"166","severity":1,"message":"187","line":14,"column":9,"nodeType":"168","messageId":"169","endLine":14,"endColumn":13},{"ruleId":"166","severity":1,"message":"177","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":18},{"ruleId":"166","severity":1,"message":"188","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":26},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["189"],"no-negated-in-lhs",["190"],"'useActions' is defined but never used.","'fetchUserCode' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIfLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["191"],["189"],["190"],"'saveCode' is defined but never used.","'setCodeType' is assigned a value but never used.","'codeState' is assigned a value but never used.","'user' is assigned a value but never used.","'useTypedSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},"Update the dependencies array to be: [checkIfLoggedIn, loggedInUser]",{"range":"194","text":"195"},[621,635],"[checkIfLoggedIn, loggedInUser]"]